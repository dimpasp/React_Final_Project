[{"C:\\Users\\User\\Desktop\\app\\my-app\\src\\index.js":"1","C:\\Users\\User\\Desktop\\app\\my-app\\src\\App.js":"2","C:\\Users\\User\\Desktop\\app\\my-app\\src\\FrontPage\\Stats.js":"3","C:\\Users\\User\\Desktop\\app\\my-app\\src\\FrontPage\\TableForFront.js":"4","C:\\Users\\User\\Desktop\\app\\my-app\\src\\FrontPage\\FrontPage.js":"5","C:\\Users\\User\\Desktop\\app\\my-app\\src\\NavbarFouter\\MyNavbar.js":"6","C:\\Users\\User\\Desktop\\app\\my-app\\src\\NavbarFouter\\Fouter.js":"7","C:\\Users\\User\\Desktop\\app\\my-app\\src\\Pages\\AddNewCourse.js":"8","C:\\Users\\User\\Desktop\\app\\my-app\\src\\Pages\\CourseDetails.js":"9","C:\\Users\\User\\Desktop\\app\\my-app\\src\\Pages\\Instructors.js":"10","C:\\Users\\User\\Desktop\\app\\my-app\\src\\Pages\\CourseForm.js":"11","C:\\Users\\User\\Desktop\\app\\my-app\\src\\Pages\\EditCourse.js":"12","C:\\Users\\User\\Desktop\\app\\my-app\\src\\Home.js":"13","C:\\Users\\User\\Desktop\\app\\my-app\\src\\Pages\\CallIns.js":"14"},{"size":153,"mtime":1607342840731,"results":"15","hashOfConfig":"16"},{"size":1139,"mtime":1608565223055,"results":"17","hashOfConfig":"16"},{"size":1342,"mtime":1608484304068,"results":"18","hashOfConfig":"16"},{"size":1737,"mtime":1608484304070,"results":"19","hashOfConfig":"16"},{"size":357,"mtime":1608484304065,"results":"20","hashOfConfig":"16"},{"size":875,"mtime":1608484304076,"results":"21","hashOfConfig":"16"},{"size":310,"mtime":1608484304074,"results":"22","hashOfConfig":"16"},{"size":7365,"mtime":1608628302809,"results":"23","hashOfConfig":"16"},{"size":4501,"mtime":1608578864062,"results":"24","hashOfConfig":"16"},{"size":2903,"mtime":1608497232854,"results":"25","hashOfConfig":"16"},{"size":2485,"mtime":1608563855788,"results":"26","hashOfConfig":"16"},{"size":5630,"mtime":1608578920820,"results":"27","hashOfConfig":"16"},{"size":353,"mtime":1608484304072,"results":"28","hashOfConfig":"16"},{"size":1876,"mtime":1608566858712,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"64s6tt",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},"C:\\Users\\User\\Desktop\\app\\my-app\\src\\index.js",[],["64","65"],"C:\\Users\\User\\Desktop\\app\\my-app\\src\\App.js",[],"C:\\Users\\User\\Desktop\\app\\my-app\\src\\FrontPage\\Stats.js",[],"C:\\Users\\User\\Desktop\\app\\my-app\\src\\FrontPage\\TableForFront.js",[],"C:\\Users\\User\\Desktop\\app\\my-app\\src\\FrontPage\\FrontPage.js",[],"C:\\Users\\User\\Desktop\\app\\my-app\\src\\NavbarFouter\\MyNavbar.js",[],"C:\\Users\\User\\Desktop\\app\\my-app\\src\\NavbarFouter\\Fouter.js",[],"C:\\Users\\User\\Desktop\\app\\my-app\\src\\Pages\\AddNewCourse.js",["66"],"import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport \"./Form.css\";\r\nimport axios from 'axios';\r\n\r\n\r\n//Δημιουργια validation για την φορμα\r\nconst formValid = ({ formErrors, ...rest }) => {\r\n  let valid = true;\r\n\r\n  // validate εαν ειναι κενο το value\r\n  Object.values(formErrors).forEach(val => {\r\n    val.length > 0 && (valid = false);\r\n  });\r\n\r\n  // validate εαν ειναι κενο το value\r\n  Object.values(rest).forEach(val => {\r\n    val === null && (valid = false);\r\n  });\r\n\r\n  return valid;\r\n};\r\n\r\n\r\nclass MyForm extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n\r\n    this.state = {\r\n      id: '',\r\n      title: null,\r\n      open: false,\r\n      duration: '',\r\n      imagePath: '',\r\n      instructors: [],\r\n      description: null,\r\n      dates: [],\r\n      price: [],\r\n      loading: true,\r\n      formErrors: {\r\n        title: \"\",\r\n        description: \"\"\r\n      }\r\n    }\r\n  }\r\n\r\n  //Oυσιαστικα εδω κανουμε state την καινουργια τιμη στο input.\r\n  handleChange(event) {\r\n    console.log(event.target.name);\r\n    const { name, value } = event.target;\r\n    let formErrors = { ...this.state.formErrors };\r\n\r\n    //Γινεται ελεγχος του εκασθοτε property\r\n    switch (name) {\r\n      case \"title\":\r\n        formErrors.title =\r\n          value.length < 5 ? \"minimum 5 characaters required\" : \"\";\r\n        break;\r\n      case \"description\":\r\n        formErrors.description =\r\n          value.length < 5 ? \"minimum 5 characaters required\" : \"\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    //Setstate για bookable\r\n     if (event.target.name === \"open\") {\r\n      const { open } = event.target\r\n      this.setState({\r\n        open: !open\r\n      })\r\n    }\r\n\r\n     //Setstate για ολα τα υπολοιπα + ελεγχος των error\r\n    else\r\n      this.setState({ formErrors, [name]: value });\r\n  }\r\n\r\n\r\n  //Setstate για μερες\r\n  handleDate= (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ dates: {...this.state.dates, [name]: value }\r\n       });\r\n  }\r\n\r\n\r\n  //Setstate για τιμες\r\n  handlePrice = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ price: {...this.state.price, [name]: value } \r\n      });\r\n  }\r\n\r\n //Function για τους instructor.Εφοσον γινει το check κανουμε push στο array το id\r\n  handleInstructors = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n      if (name === \"JohnTsevdos\") \r\n      { \r\n        this.state.instructors.push(\"01\");\r\n      }\r\n      if (name === \"YiannisNikolakopoulos\") \r\n      { \r\n        this.state.instructors.push(\"02\");\r\n      } \r\n  }\r\n\r\n  // Aυτη η μεθοδος χρησιμοποιειται για να κανουμε ενημερωση το αντικειμενο(φορμα στην περιπτωση).\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    //check for error\r\n    if (formValid(this.state)) {\r\n      console.log(`\r\n        --SUBMITTING--\r\n        title: ${this.state.title}\r\n        description: ${this.state.description}\r\n      `);\r\n    } else {\r\n      alert(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\r\n    }\r\n\r\n    // Ουσιαστικα μεσω του axios στελνουμε τα δεδομενα.\r\n    axios\r\n      .post('http://localhost:3000/courses', this.state)\r\n      .then(res => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n      })\r\n      // log request error and prevent access to undefined state\r\n      .catch(err => {\r\n        this.setState({ loading: false, error: true });\r\n        console.error(err);\r\n      })\r\n  }\r\n\r\n\r\n  render() {\r\n    //δηλωνουμε τα error για να τα χρησιμοποιησουμε στην φορμα\r\n    const { formErrors } = this.state;\r\n\r\n    // να εμφανισει μνμ εαν αποτυχει το request\r\n    if (this.state.error) {\r\n      return (\r\n        <div>\r\n          <p> An error occured </p>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1 style={{ textAlign: 'center', marginTop: 10 }}>Add Course</h1>\r\n        <form id=\"contact-form\" onSubmit={this.handleSubmit}>\r\n          <Form.Group >\r\n            <Form.Label>Title Name</Form.Label>\r\n            <Form.Control type=\"text\" name=\"title\" className={formErrors.title.length > 0 ? \"error\" : null} placeholder=\"Title Name\" value={this.state.title} onChange={(e) => { this.handleChange(e) }} />\r\n          </Form.Group>\r\n          <hr />\r\n          <Form.Group >\r\n            <Form.Label>Duration</Form.Label>\r\n            <Form.Control type=\"text\" name=\"duration\" placeholder=\"Duration\" value={this.state.duration} onChange={this.handleChange} />\r\n          </Form.Group>\r\n          <Form.Group >\r\n            <Form.Label>Image</Form.Label>\r\n            <Form.Control type=\"text\" name=\"imagePath\" placeholder=\"Path for image\" value={this.state.imagePath} onChange={this.handleChange} />\r\n          </Form.Group>\r\n          <Form.Group >\r\n            <Form.Label check=\"true\">{' '}Bookable</Form.Label>\r\n            <Form.Check type=\"checkbox\" name=\"open\" onChange={this.handleChange} />\r\n          </Form.Group>\r\n          <hr />\r\n          <h1>Instructors</h1>\r\n          <Form.Group >\r\n          <Form.Label check=\"true\">{' '}John Tsevdos</Form.Label>\r\n            <Form.Check type=\"checkbox\" name=\"JohnTsevdos\" onChange={this.handleInstructors}  />\r\n          </Form.Group>\r\n          <Form.Group >\r\n          <Form.Label check=\"true\">{' '}Yiannis Nikolakopoulos</Form.Label>\r\n            <Form.Check type=\"checkbox\" name=\"YiannisNikolakopoulos\" onChange={this.handleInstructors}  />\r\n          </Form.Group>\r\n          <hr />\r\n          <Form.Group>\r\n            <Form.Label>Description</Form.Label>\r\n            <Form.Control as=\"textarea\" name=\"description\" className={formErrors.description.length > 0 ? \"error\" : null} rows=\"4\" value={this.state.description} onChange={this.handleChange} />\r\n          </Form.Group>\r\n          <hr />\r\n          <h1>Dates</h1>\r\n          <Form.Group >\r\n            <Form.Label>Start Date:</Form.Label>\r\n            <Form.Control type=\"text\" name=\"start_date\" placeholder=\"Start Date\" value={this.state.start_date} onChange={this.handleDate} />\r\n          </Form.Group>\r\n          <Form.Group >\r\n            <Form.Label>End Date:</Form.Label>\r\n            <Form.Control type=\"text\" name=\"end_date\" placeholder=\"End Date\" value={this.state.dates.end_date} onChange={this.handleDate} />\r\n          </Form.Group>\r\n          <hr />\r\n          <h1>Price</h1>\r\n          <Form.Group>\r\n            <Form.Label>Early Bird:</Form.Label>\r\n            <Form.Control type=\"text\" name=\"early_bird\" placeholder=\"0\" value={this.state.price.early_bird} onChange={this.handlePrice} />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Normal price:</Form.Label>\r\n            <Form.Control type=\"value\" name=\"normal\" placeholder=\"0\" value={this.state.price.normal} onChange={this.handlePrice} />\r\n          </Form.Group>\r\n          <hr />\r\n          <input type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MyForm;","C:\\Users\\User\\Desktop\\app\\my-app\\src\\Pages\\CourseDetails.js",[],"C:\\Users\\User\\Desktop\\app\\my-app\\src\\Pages\\Instructors.js",["67","68"],"import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport { Card, CardTitle, CardText, CardBody} from 'reactstrap';\r\nimport {Carousel,Image} from 'react-bootstrap'\r\nimport './CourseForm.css'\r\n\r\n\r\n\r\nclass InstructorsForm extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      posts: []\r\n    }\r\n  }\r\n  //Αυτη ειναι μια lifecycle μεθοδος και εκτελειται την πρωτη φορα του get request\r\n  componentDidMount() {\r\n    axios.get('http://localhost:3000/instructors')\r\n      .then(response => {\r\n        console.log(response)\r\n        this.setState({ posts: response.data })\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        this.setState({ errorMsg: 'Error retreiving data' })\r\n      })\r\n  }\r\n  \r\n  render() {\r\n    const { posts } = this.state\r\n\r\n    return (\r\n      <div >\r\n        <div>\r\n        <Carousel>\r\n        <Carousel.Item interval={1000}>\r\n          <Image src=\"code-background-1.png\"  style={{resizeMode: \"cover\", height: 400,  width: 2000 }} fluid />\r\n        </Carousel.Item>\r\n        <Carousel.Item interval={500}>\r\n          <Image src=\"learn.png\"  style={{resizeMode: \"cover\", height: 400,  width: 2000 }} fluid />\r\n        </Carousel.Item>\r\n        <Carousel.Item interval={1000}>\r\n          <Image src=\"python.png\"  style={{resizeMode: \"cover\", height: 400,  width: 2000 }} fluid />\r\n        </Carousel.Item>\r\n        </Carousel>\r\n        </div>\r\n        <div>\r\n          <h1 style={{textAlign:'center',marginTop:30 }}>Vision</h1>\r\n          <h5 style={{marginLeft:150 ,marginTop:30 }}>Code.Hub is your ideal HR partner whether you are a multinational company, a startup company or an ICT professional.</h5>\r\n          <h5  style={{marginLeft:150 ,marginBottom:30 }}>Our vision is to meet every professional in ICT sector, either by Code.Career, \r\n             Code.Learn or Code.Event services and connect them to create a powerful Code.Community.</h5>\r\n        </div>\r\n        <div>\r\n        <h1 id=\"title\">Instructors</h1>\r\n        <div className=\"grid\">\r\n        {\r\n          posts.length ?\r\n            posts.map(post => <td key={post.id}>\r\n              <Card  className=\"box\" >\r\n              <CardTitle className=\"card-title\">{post.name.first} {post.name.last}</CardTitle>\r\n                <CardBody>\r\n                  <CardText>Gender: {post.gender}</CardText>\r\n                  <CardText>Date of birth: {post.dob}</CardText>\r\n                  <CardText>Bio: {post.bio}</CardText>\r\n                  <CardText>Hobbies list: {post.hobbies}</CardText> \r\n                  <CardText><a href=\"#\">{post.email}</a>{\" | \"}<a href=\"#\">{post.linkedin}</a></CardText>\r\n                </CardBody>\r\n              </Card>\r\n            </td>\r\n            ) : null\r\n        }\r\n        </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nexport default InstructorsForm;\r\n","C:\\Users\\User\\Desktop\\app\\my-app\\src\\Pages\\CourseForm.js",[],"C:\\Users\\User\\Desktop\\app\\my-app\\src\\Pages\\EditCourse.js",["69","70","71"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Form } from \"react-bootstrap\";\r\nimport \"./Form.css\";\r\n\r\n\r\nclass EditCourse extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n          id:'',\r\n          title: '',\r\n          duration: '',\r\n          imagePath: '',\r\n          description: '',\r\n          instructors: [],\r\n          dates:[],\r\n          price:[]\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n      }\r\n     \r\n//αρχικα ελεγχουμε αν το id που τσεκαρουμε υπαρχει.\r\n//Εφοσον υπαρχει φερνουμε ολα τα data του object του.\r\n      componentDidMount(id) {\r\n        let CourseId = this.props.match.params.id;\r\n        axios.get(`http://localhost:3000/courses/${CourseId}`)\r\n        .then(response => {\r\n          this.setState({\r\n            id: response.data.id,\r\n            imagePath:response.data.imagePath,\r\n            early_bird:response.data.price.early_bird,\r\n            normal:response.data.price.normal,\r\n            dates:response.data.dates,\r\n            instructors:response.data.instructors,\r\n            title: response.data.title,\r\n            duration: response.data.duration,\r\n            description:response.data.description\r\n          }, () => {\r\n            console.log(this.state);\r\n          });\r\n        }) .catch(error => {\r\n            console.log(error)\r\n            this.setState({ errorMsg: 'Error retreiving data' })\r\n          })\r\n      }\r\n      FuncInstructors = (event) => {\r\n        const { name, submit } = event.target;\r\n        if (submit) {\r\n          if (name === \"JohnTsevdos\") { this.state.instructors.push(\"01\");\r\n          }\r\n          if (name === \"YiannisNikolakopoulos\") { this.state.instructors.push(\"02\");\r\n          }\r\n        }\r\n        //εαν δεν γινει submit παλι πρεπει να επιστρεψουμε τιμη (!id) λογω του length του array\r\n        else {\r\n          if (name === \"JohnTsevdos\") { this.state.instructors = this.state.instructors.filter(function (event) { return event !== \"01\" })\r\n          }\r\n          if (name === \"YiannisNikolakopoulos\") { this.state.instructors = this.state.instructors.filter(function (event) { return event !== \"02\" })\r\n          }\r\n        }\r\n      }\r\n\r\n//στελνουμε τα δεδομενα του update μεσω του Put request\r\n\r\n  onSubmit(id, e){\r\n    e.preventDefault();\r\n    axios.put(`http://localhost:3000/courses/${this.state.id}`, this.state)\r\n      .then(response => {\r\n        console.log(response);       \r\n      }).catch(err => console.log(err));\r\n      this.props.history.push('/CourseForm'); \r\n  }\r\n\r\n  //περναει η καθε αλλαγη ξεχωριστα\r\n  handleInputChange(e){\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  //εμφανιζουμε το ηδη υπαρχον αντικειμενο και δινουμε την δυνατοτητα αλλαγης\r\n  render(){\r\n    return (\r\n     <div >\r\n        <br />\r\n       <h1 style={{textAlign:'center',marginTop:30 }}>Edit Course</h1>\r\n       <form id=\"contact-form\" onSubmit={(e)=>this.onSubmit(this.state.id,e)}>\r\n          <Form.Group >\r\n            <Form.Label>Title Name  </Form.Label>\r\n            <Form.Control type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleInputChange} />\r\n          </Form.Group>\r\n          <Form.Group >\r\n            <Form.Label>Image</Form.Label>\r\n            <Form.Control type=\"text\" name=\"imagePath\" placeholder=\"Path for image\" value={this.state.imagePath} onChange={this.handleInputChange} />\r\n          </Form.Group>\r\n          <Form.Group >\r\n            <Form.Label>Price Early :  </Form.Label>\r\n            <Form.Control type=\"text\" name=\"early_bird\" value={this.state.early_bird} onChange={this.handleInputChange} />\r\n          </Form.Group>\r\n          <Form.Group >\r\n            <Form.Label>Normal Price : </Form.Label>\r\n            <Form.Control type=\"text\" name=\"normal\" value={this.state.normal} onChange={this.handleInputChange} />\r\n          </Form.Group>\r\n          <Form.Group >\r\n            <Form.Label>Date start :  </Form.Label>\r\n            <Form.Control type=\"text\" name=\"start_date\" value={this.state.dates.start_date} onChange={this.handleInputChange} />\r\n          </Form.Group>\r\n          <Form.Group >\r\n            <Form.Label>Date end :  </Form.Label>\r\n            <Form.Control type=\"text\" name=\"end_date\" value={this.state.dates.end_date} onChange={this.handleInputChange} />\r\n          </Form.Group>\r\n          <Form.Group >\r\n            <Form.Label>Duration : </Form.Label>\r\n            <Form.Control type=\"text\" name=\"duration\" value={this.state.duration} onChange={this.handleInputChange} />\r\n          </Form.Group>\r\n          <h1>Instructors</h1>\r\n          <Form.Group >\r\n            <Form.Check type=\"checkbox\" label=\"John Tsevdos\" name=\"JohnTsevdos\" onChange={this.FuncInstructors}  />\r\n          </Form.Group>\r\n          <Form.Group >\r\n            <Form.Check type=\"checkbox\" label=\"Yiannis Nikolakopoulos\" name=\"YiannisNikolakopoulos\" onChange={this.FuncInstructors}  />\r\n          </Form.Group>\r\n          <Form.Group >\r\n            <Form.Label>Description : </Form.Label>\r\n            <Form.Control as=\"textarea\" rows={3} name=\"description\" value={this.state.description} onChange={this.handleInputChange} />\r\n          </Form.Group>\r\n          <input type=\"submit\" value=\"Save\" className=\"btn\" />\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditCourse;\r\n","C:\\Users\\User\\Desktop\\app\\my-app\\src\\Home.js",[],"C:\\Users\\User\\Desktop\\app\\my-app\\src\\Pages\\CallIns.js",["72","73"],"import React, { useEffect, useState } from \"react\";\r\n\r\n//instructorId => key για συνδεση με το course\r\nconst Instructors = ({ instructorId }) => {\r\n\r\n    useEffect(() => {\r\n        fetchInstructor();\r\n    }, []);\r\n\r\n    //Δηλωση μεθοδου για να φερω ολους του instructor\r\n    const [instructors, setInstructors] = useState([]);\r\n    const fetchInstructor = () => {\r\n        fetch(`http://localhost:3000/instructors`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setInstructors(result);\r\n                }\r\n            )\r\n            .catch(error => {\r\n                console.log(error)\r\n                this.setState({ errorMsg: 'Error retreiving data' })\r\n            })\r\n    }\r\n\r\n    return (\r\n\r\n        <div >\r\n          {\r\n          // Chech εαν το request εγινε \r\n          instructors.length ?\r\n          //κανουμε post μονο τα data απο το id που θελουμε\r\n          instructors.map(post => \r\n            instructorId.indexOf(post.id) >-1 ?\r\n               (\r\n                <div>\r\n                    <div className=\"modal-body\">\r\n                        <h3>{post.name.first} {post.name.last}</h3>  \r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                       <a href=\"#\">{post.email}</a>{\" | \"}<a href=\"#\">{post.linkedin}</a>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                       <h5>Date of birth: {post.dob}</h5>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                       <h5>Bio: {post.bio}</h5>\r\n                    </div>      \r\n                  </div>\r\n               ): null               \r\n            ) : null\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Instructors;",["74","75"],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":102,"column":19,"nodeType":"82","messageId":"83","endLine":102,"endColumn":24},{"ruleId":"84","severity":1,"message":"85","line":66,"column":29,"nodeType":"86","endLine":66,"endColumn":41},{"ruleId":"84","severity":1,"message":"85","line":66,"column":64,"nodeType":"86","endLine":66,"endColumn":76},{"ruleId":"87","severity":1,"message":"88","line":27,"column":9,"nodeType":"89","messageId":"90","endLine":42,"endColumn":18,"fix":"91"},{"ruleId":"92","severity":1,"message":"93","line":57,"column":41,"nodeType":"89","endLine":57,"endColumn":51},{"ruleId":"92","severity":1,"message":"93","line":59,"column":51,"nodeType":"89","endLine":59,"endColumn":61},{"ruleId":"84","severity":1,"message":"85","line":41,"column":24,"nodeType":"86","endLine":41,"endColumn":36},{"ruleId":"84","severity":1,"message":"85","line":41,"column":59,"nodeType":"86","endLine":41,"endColumn":71},{"ruleId":"76","replacedBy":"94"},{"ruleId":"78","replacedBy":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'value' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-whitespace-before-property","Unexpected whitespace before property catch.","MemberExpression","unexpectedWhitespace",{"range":"98","text":"99"},"react/no-direct-mutation-state","Do not mutate state directly. Use setState().",["96"],["97"],"no-global-assign","no-unsafe-negation",[1346,1348],"."]